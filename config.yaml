problem:
  # Problem name to prefix output files with
  name: Example
  # The base OpenFOAM case; this needs to be fully functional case once paramters/files are substituted.
  template_case: 'pitzDaily'
  # Experiment paramters
  parameters:
    #baseRes:
    #  type: range
    #  value_type: int
    #  bounds: [90, 300]
    #  log_scale: False
    inletVelocity:
      type: range
      value_type: float
      bounds: [15.0, 20.0]
      log_scale: False
  # Experiment objectives. Metric values are fetched through shell commands in the working directory of
  # the specific trial
  objectives:
    ExecutionTime:
      command: ['awk', '/ExecutionTime/{a=$3} END{print(a)}', 'log.simpleFoam']
      threshold: 5
      minimize: True

meta:
  # When clonging template case, specify extra files/dirs to clone
  case_subdirs_to_clone: ["0orig"]
  # Case run mode (local, smartsim)
  case_run_mode: local
  # How should we run your case?)
  # This should command should be blocking for now, and delivering metric values
  # which are then extracted through problem.objectives.*.command
  case_run_command: ['./Allrun']
  # Also specify a timeout in case the trial gets stuck (local-only)
  case_command_timeout: 1000
  # Number of trials to generate:
  # Using SOBOL for paramter variation
  # Model is automatically chosen for optimization studies
  n_trials: 4
  # Number of pareto front points to generate
  n_pareto_points: 5
  # Paramters can be substitued as whole case files
  # There are done first if present
  #file_copies:
  #modelType:
  #  template: "/constant/transportProperties"
  # Parameters can also be substituted per-file
  scopes:
    #"/system/blockMeshDict":
    #  baseRes: "baseRes"
    "/0orig/U":
      inletVelocity: "inletVelocity"

# Evaluate how the optimization algorithm did
verify:
  base:
    - inletVelocity: 10
