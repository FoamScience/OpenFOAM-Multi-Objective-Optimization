problem:
  name: ShapeOpt
  template_case: 'pitzDaily'
  parameters:
    nCtrlPnts:
      type: choice
      value_type: int
      values: [4, 6]
      is_ordered: True
    angle1:
      type: range
      value_type: float
      bounds: [-90.0, 0.0]
      log_scale: False
    # Angle2 is for the "first new control point on the right"
    # Cannot reach -90 otherwise Paraview's connectivity filter won't detect the outlet
    # Can this be implicitely penalized in metric computation?
    angle2:
      type: range
      value_type: float
      bounds: [-180.0, -120.0]
      log_scale: False
    angle3:
      type: range
      value_type: float
      bounds: [-90.0, 90.0]
      log_scale: False
    angle4:
      type: range
      value_type: float
      bounds: [90.0, 270.0]
      log_scale: False
    radiusRatio1:
      type: range
      value_type: float
      bounds: [0.1, 0.5]
      log_scale: False
    radiusRatio2:
      type: range
      value_type: float
      bounds: [0.1, 0.5]
      log_scale: False
    radiusRatio3:
      type: range
      value_type: float
      bounds: [0.1, 0.5]
      log_scale: False
    radiusRatio4:
      type: range
      value_type: float
      bounds: [0.1, 0.5]
      log_scale: False
  objectives:
    PressureDrop:
      mode: 'shell'
      command: ['./getPressDiff.sh']
      threshold: 6
      minimize: True
      lower_is_better: True
        #ExecutionTime:
        #  mode: 'shell'
        #  command: ['awk', '/ExecutionTime/{a=$3} END{print(a)}', 'log.simpleFoam']
        #  threshold: 10
        #  minimize: True
        #  lower_is_better: True

meta:
  metric_value_mode: 'local'
  case_subdirs_to_clone:
    - 0orig
    - Allrun.slurm
    - geometry
    - openscad
    - patches.py
    - getPressDiff.sh
    - pressureDiff.py
    - case.foam
    - getImage.sh
    - renderResults.py
  clone_destination: ""
  case_run_mode: slurm
  #case_run_command: ['./Allrun']
  case_run_command: ['sbatch', '-J', '$CASE_NAME', './Allrun.slurm', '$CASE_PATH']
  # This works if accounting is enabled on SLURM
  #slurm_status_query: ['sacct', '--name', '$CASE_NAME', '-o', 'JobName%60,State', '-n']
  # Instead we can use the less reliable scontrol
  slurm_status_query: ['../getSLURMJOBStatus.sh', '$CASE_NAME']
  n_trials: 30
  n_parallel_trials: 2
  # How about diverging cases???
  ttl_trial: 3600
  init_poll_wait: 2
  poll_factor: 1.5
  timeout: 10
  use_saasbo: True
  n_pareto_points: 5
  scopes:
    "/system/geometryDict":
      nCtrlPnts: "nCtrlPnts"
      angle1: "angle1"
      angle2: "angle2"
      angle3: "angle3"
      angle4: "angle4"
      radiusRatio1: "ratio1"
      radiusRatio2: "ratio2"
      radiusRatio3: "ratio3"
      radiusRatio4: "ratio4"

visualize:
  # Replot every 30 secs
  update_interval: 30
  # Number of latest trials to generate images for
  n_figures: 3
  # Generate an image of the trial's final state
  # This needs to return a URI to the generate image (can be local)
  figure_generator: ['./getImage.sh']
  # IP/Port to expose the dashboard app
  host: '0.0.0.0'
  port: 8888
