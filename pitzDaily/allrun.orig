#!/usr/bin/env bash
source /fsx/OpenFOAM/OpenFOAM-v2212/etc/bashrc
cd "${0%/*}" || exit                                # Run from this directory
. ${WM_PROJECT_DIR:?}/bin/tools/RunFunctions        # Tutorial run functions
#------------------------------------------------------------------------------

function getParam() {
    foamDictionary -entry "$1" -value system/geometryDict
}

nCurvePnts=$(getParam "nCurvePnts")
nCtrlPnts=$(getParam "nCtrlPnts")
nNewCtrlPnts=$((nCtrlPnts-2))
L=$(getParam "L")

declare -A angleVals
counter=1
for i in $(seq 1 2 $nNewCtrlPnts); do
    angleVals[$i]=$(getParam "angle$counter")
    counter=$((counter+2))
done
counter=$nNewCtrlPnts
for i in $(seq 2 2 $nNewCtrlPnts); do
    angleVals[$i]=$(getParam "angle$counter")
    counter=$((counter-2))
done

angles="["
for i in $(seq 1 $nNewCtrlPnts); do
    angles="$angles ${angleVals[$i]},"
done
angles="$angles ]"

declare -A radiusVals
counter=1
for i in $(seq 1 2 $nNewCtrlPnts); do
    radiusVals[$i]=$(getParam "ratio$counter")
    counter=$((counter+2))
done
counter=$nCtrlPnts
for i in $(seq 2 2 $nNewCtrlPnts); do
    radiusVals[$i]=$(getParam "ratio$counter")
    counter=$((counter-2))
done
radius="["
for i in $(seq 1 $nNewCtrlPnts); do
    radius="$radius ${radiusVals[$i]},"
done
radius="$radius ]"

## First generate the geometry
runApplication openscad -o geometry/pitzDaily.stl -D "nCurvePnts=$nCurvePnts;nCtrlPnts=$nCtrlPnts;L=$L;angles=$angles;radius_ratios=$radius" openscad/pitzDaily.scad

## Then remove the faces whose normals are in Z
sed -r '/facet normal [-+]?0 [-+]?0 /,+6d' geometry/pitzDaily.stl > geometry/pitzDaily2D.stl

# Check the surface file
runApplication surfaceCheck geometry/pitzDaily2D.stl

# Split patches and put back together
pvpython patches.py $PWD/geometry
echo "Writing geometry/pitzDaily.stl"
sed "s/^solid.*/solid inlet/g" geometry/inlet.stl > geometry/pitzDaily.stl
sed "s/^solid.*/solid outlet/g" geometry/outlet.stl >> geometry/pitzDaily.stl
sed "s/^solid.*/solid upperWall/g" geometry/upperWall.stl >> geometry/pitzDaily.stl
counter=1
for ii in geometry/patch*.stl; do
    sed "s/^solid.*/solid wall_$counter/g" "$ii" >> geometry/pitzDaily.stl
    counter=$((counter+1))
done

# Generate the mesh
runApplication cartesian2DMesh

cp -rT 0orig 0

# Parallel run on the slurm cluster
runApplication $(getApplication)
